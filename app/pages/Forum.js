import React, { useState, useEffect } from "react";
import {
  StyleSheet,
  Text,
  View,
  Image,
  SafeAreaView,
  KeyboardAvoidingView,
  ScrollView,
  ActivityIndicator,
} from "react-native";
import colours from "../components/Colours";
import Button from "../components/Button";
import axios from "axios";
import ActivityViewer from "./ActivityViewer";
import { useNavigation } from "expo-router";
import { TouchableOpacity } from "react-native-gesture-handler";

const Forum = () => {
  const [data, setData] = useState(null);
  const [dataKeys, setDataKeys] = useState(null);
  const [isLoading, setIsLoading] = useState(true);
  const [eventArr, setEventArr] = useState(null);
  const navigation = useNavigation();

  const navigateBack = () => {
    navigation.goBack();
  }

  var currentTime = new Date();
  var year = currentTime.getFullYear().toString();

  /* calls api from generated by python code */
  useEffect(() => {
    const fetchData = async () => {
      try {
        const response = await axios.get(
          `https://polarisbackend.onrender.com/events/${year}`,
          {
            headers: {
              "User-Agent": "curl/7.64.1",
            },
          }
        );
        const sortedData = sortDataByDtstart(response.data);
        setData(sortedData);
        console.log(response.data);
      } catch (error) {
        console.error(error);
      } finally {
        setIsLoading(false); // Data fetching is complete, set isLoading to false
      }
    };

    fetchData();
  }, []);

  /* sort by date and only include more than today */
  const sortDataByDtstart = (data) => {
    const currentDate = new Date();
    const sortedEntries = Object.entries(data)
      .filter(([key, value]) => new Date(value.dtstart) >= currentDate)
      .sort(([, a], [, b]) => new Date(a.dtstart) - new Date(b.dtstart));
    return Object.fromEntries(sortedEntries);
  };

  useEffect(() => {
    if (data) {
      setDataKeys(Object.keys(data));
    }
  }, [data]);

  useEffect(() => {
    if (dataKeys && dataKeys.length > 0) {
      const arr = dataKeys.map((key) => (
        <ActivityViewer key={key} info={data[key]} />
      ));
      setEventArr(arr);
    }
  }, [dataKeys]);

  return (
    <KeyboardAvoidingView style={styles.container}>
      <TouchableOpacity onPress={navigateBack}>
        <View style={styles.button}>
          <View style={styles.buttonContainer}>
            <Button styleOverride={styles.buttonLayout} />
            <Image
              style={styles.overlayImage}
              source={require("../assets/images/left-arrow.png")}
            />
          </View>
        </View>
      </TouchableOpacity>
      <Text testID="loginTitle" style={styles.title}>
        Upcoming
      </Text>

      {isLoading ? (
        <ActivityIndicator size="large" color={colours.white} />
      ) : (
        <ScrollView>{eventArr}</ScrollView>
      )}
    </KeyboardAvoidingView>
  );
};

export default Forum;

const styles = StyleSheet.create({
  container: {
    flex: 1,
    alignItems: "center",
    backgroundColor: colours.primary,
  },
  title: {
    alignItems: "center",
    fontSize: 50,
    color: colours.white,
    fontFamily: "LatoBold",
    paddingBottom: 10,
    paddingTop: 5,
  },
  buttonLayout: {
    width: 110,
    height: 70,
    backgroundColor: "rgba(128, 128, 128, 0.1)",
  },
  button: {
    flexDirection: "row",
    alignItems: "center",
    justifyContent: "center",
    paddingTop: 50,
    paddingRight: 250,
  },
  buttonContainer: {
    position: "relative",
    alignItems: "center",
    justifyContent: "center",
  },
  overlayImage: {
    position: "absolute",
    zIndex: 1,
    width: 35,
    height: 35,
  },
});
